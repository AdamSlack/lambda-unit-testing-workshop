document.querySelector('mutation-test-report-app').report = {"files":{"/home/hapax/github/adamslack/lambda-unit-testing-workshop/src/fetchCustomers/index.ts":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":2,"line":34},"start":{"column":95,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: when invoked with query params: {} should make a http request with correct params"},{"id":"15","location":{"end":{"column":33,"line":39},"start":{"column":18,"line":39}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: when invoked with query params: { limit: 'a' } should not make a http request with correct params"},{"id":"4","location":{"end":{"column":41,"line":18},"start":{"column":38,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: when invoked with query params: {} should make a http request with correct params"},{"id":"8","location":{"end":{"column":51,"line":19},"start":{"column":48,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: when invoked with query params: {} should make a http request with correct params"},{"id":"3","location":{"end":{"column":41,"line":18},"start":{"column":17,"line":18}},"mutatorName":"LogicalOperator","replacement":"queryParams.limit && '5'","status":"Killed","description":"Killed by: when invoked with query params: {} should make a http request with correct params"},{"id":"12","location":{"end":{"column":37,"line":26},"start":{"column":15,"line":26}},"mutatorName":"StringLiteral","replacement":"``","status":"Killed","description":"Killed by: when invoked with query params: {} should make a http request with correct params"},{"id":"9","location":{"end":{"column":17,"line":21},"start":{"column":10,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: when request for customers fails should info log the query params"},{"id":"11","location":{"end":{"column":39,"line":23},"start":{"column":18,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: when invoked with query params: {} should make a http request with correct params"},{"id":"10","location":{"end":{"column":45,"line":21},"start":{"column":18,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: when request for customers fails should info log the query params"},{"id":"2","location":{"end":{"column":41,"line":18},"start":{"column":17,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: when invoked with query params: {} should make a http request with correct params"},{"id":"5","location":{"end":{"column":51,"line":19},"start":{"column":22,"line":19}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: when invoked with query params: {} should make a http request with correct params"},{"id":"14","location":{"end":{"column":4,"line":33},"start":{"column":10,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: when invoked with query params: {} should return a 200 OK status code"},{"id":"7","location":{"end":{"column":51,"line":19},"start":{"column":22,"line":19}},"mutatorName":"LogicalOperator","replacement":"queryParams.pageNumber && '1'","status":"Killed","description":"Killed by: when invoked with query params: {} should make a http request with correct params"},{"id":"13","location":{"end":{"column":51,"line":28},"start":{"column":41,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: when invoked with query params: {} should make a http request with correct params"},{"id":"1","location":{"end":{"column":41,"line":18},"start":{"column":17,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: when invoked with query params: {} should make a http request with correct params"},{"id":"6","location":{"end":{"column":51,"line":19},"start":{"column":22,"line":19}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: when invoked with query params: {} should make a http request with correct params"}],"source":"import { APIGatewayProxyEvent, APIGatewayProxyResult } from \"aws-lambda\"\nimport middy from '@middy/core'\nimport jsonBodyParser from '@middy/http-json-body-parser'\nimport httpErrorHandler from '@middy/http-error-handler'\nimport validator from '@middy/validator'\nimport axios from 'axios'\nimport logger from '../logger'\n\nimport inputSchema from './schema'\n\ntype QueryParams = {\n  limit: string,\n  pageNumber: string\n}\n\nconst fetchCustomers = async (event: APIGatewayProxyEvent): Promise<APIGatewayProxyResult> => {\n  const queryParams = event.queryStringParameters as QueryParams;\n  const limit = queryParams.limit || '5'\n  const pageNumber = queryParams.pageNumber || '1' \n  \n  logger('DEBUG','invoked with query params', queryParams)\n  \n  const params = { limit, pageNumber }\n  \n  const baseUrl = process.env.baseUrl;\n  const url = `${baseUrl}/customers`\n\n  const customer = await axios.get(url, { params })\n\n  return {\n    statusCode: 200,\n    body: JSON.stringify(customer)\n  }\n}\n\nconst handler = middy(fetchCustomers)\n  .use(jsonBodyParser()) \n  .use(httpErrorHandler())\n  .use(validator({ inputSchema }))\n\nexport {\n  handler\n}"},"/home/hapax/github/adamslack/lambda-unit-testing-workshop/src/fetchCustomers/schema.ts":{"language":"typescript","mutants":[{"id":"16","location":{"end":{"column":2,"line":12},"start":{"column":16,"line":1}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: when invoked with query params: { limit: 'a' } should not make a http request with correct params"},{"id":"17","location":{"end":{"column":17,"line":2},"start":{"column":9,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError","description":"Error message: undefinedschema is invalid: data/type should be equal to one of the allowed values, data/type should be array, data/type should match some schema in anyOf Error: schema is invalid: data/type should be equal to one of the allowed values, data/type should be array, data/type should match some schema in anyOf\n    at Ajv.validateSchema (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/ajv/lib/ajv.js:178:16)\n    at Ajv._addSchema (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/ajv/lib/ajv.js:307:10)\n    at Ajv.compile (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/ajv/lib/ajv.js:113:24)\n    at Object.<anonymous>.module.exports [as default] (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/@middy/validator/index.js:50:43)\n    at Object.<anonymous> (/home/hapax/github/adamslack/lambda-unit-testing-workshop/.stryker-tmp/sandbox5925204/src/fetchCustomers/index.ts:94:98)\n    at Runtime._execModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:1299:24)\n    at Runtime._loadModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:898:12)\n    at Runtime.requireModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:746:10)\n    at Runtime.requireModuleOrMock (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:919:21)\n    at Object.<anonymous> (/home/hapax/github/adamslack/lambda-unit-testing-workshop/.stryker-tmp/sandbox5925204/src/fetchCustomers/index.test.ts:9:1)\n    at Runtime._execModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:1299:24)\n    at Runtime._loadModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:898:12)\n    at Runtime.requireModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:746:10)\n    at jasmine2 (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-jasmine2/build/index.js:230:13)\n    at runTestInternal (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runner/build/runTest.js:380:22)\n    at runTest (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runner/build/runTest.js:472:34)"},{"id":"18","location":{"end":{"column":4,"line":11},"start":{"column":15,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: when invoked with query params: { limit: 'a' } should not make a http request with correct params"},{"id":"20","location":{"end":{"column":21,"line":5},"start":{"column":13,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError","description":"Error message: undefinedschema is invalid: data/properties/queryStringParameters/type should be equal to one of the allowed values, data/properties/queryStringParameters/type should be array, data/properties/queryStringParameters/type should match some schema in anyOf Error: schema is invalid: data/properties/queryStringParameters/type should be equal to one of the allowed values, data/properties/queryStringParameters/type should be array, data/properties/queryStringParameters/type should match some schema in anyOf\n    at Ajv.validateSchema (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/ajv/lib/ajv.js:178:16)\n    at Ajv._addSchema (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/ajv/lib/ajv.js:307:10)\n    at Ajv.compile (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/ajv/lib/ajv.js:113:24)\n    at Object.<anonymous>.module.exports [as default] (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/@middy/validator/index.js:50:43)\n    at Object.<anonymous> (/home/hapax/github/adamslack/lambda-unit-testing-workshop/.stryker-tmp/sandbox5925204/src/fetchCustomers/index.ts:94:98)\n    at Runtime._execModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:1299:24)\n    at Runtime._loadModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:898:12)\n    at Runtime.requireModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:746:10)\n    at Runtime.requireModuleOrMock (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:919:21)\n    at Object.<anonymous> (/home/hapax/github/adamslack/lambda-unit-testing-workshop/.stryker-tmp/sandbox5925204/src/fetchCustomers/index.test.ts:9:1)\n    at Runtime._execModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:1299:24)\n    at Runtime._loadModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:898:12)\n    at Runtime.requireModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:746:10)\n    at jasmine2 (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-jasmine2/build/index.js:230:13)\n    at runTestInternal (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runner/build/runTest.js:380:22)\n    at runTest (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runner/build/runTest.js:472:34)"},{"id":"25","location":{"end":{"column":38,"line":8},"start":{"column":29,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError","description":"Error message: undefinedschema is invalid: data/properties/queryStringParameters/properties/pageNumber/type should be equal to one of the allowed values, data/properties/queryStringParameters/properties/pageNumber/type should be array, data/properties/queryStringParameters/properties/pageNumber/type should match some schema in anyOf Error: schema is invalid: data/properties/queryStringParameters/properties/pageNumber/type should be equal to one of the allowed values, data/properties/queryStringParameters/properties/pageNumber/type should be array, data/properties/queryStringParameters/properties/pageNumber/type should match some schema in anyOf\n    at Ajv.validateSchema (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/ajv/lib/ajv.js:178:16)\n    at Ajv._addSchema (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/ajv/lib/ajv.js:307:10)\n    at Ajv.compile (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/ajv/lib/ajv.js:113:24)\n    at Object.<anonymous>.module.exports [as default] (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/@middy/validator/index.js:50:43)\n    at Object.<anonymous> (/home/hapax/github/adamslack/lambda-unit-testing-workshop/.stryker-tmp/sandbox5925204/src/fetchCustomers/index.ts:94:98)\n    at Runtime._execModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:1299:24)\n    at Runtime._loadModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:898:12)\n    at Runtime.requireModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:746:10)\n    at Runtime.requireModuleOrMock (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:919:21)\n    at Object.<anonymous> (/home/hapax/github/adamslack/lambda-unit-testing-workshop/.stryker-tmp/sandbox5925204/src/fetchCustomers/index.test.ts:9:1)\n    at Runtime._execModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:1299:24)\n    at Runtime._loadModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:898:12)\n    at Runtime.requireModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:746:10)\n    at jasmine2 (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-jasmine2/build/index.js:230:13)\n    at runTestInternal (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runner/build/runTest.js:380:22)\n    at runTest (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runner/build/runTest.js:472:34)"},{"id":"19","location":{"end":{"column":6,"line":10},"start":{"column":28,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: when invoked with query params: { limit: 'a' } should not make a http request with correct params"},{"id":"23","location":{"end":{"column":33,"line":7},"start":{"column":24,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError","description":"Error message: undefinedschema is invalid: data/properties/queryStringParameters/properties/limit/type should be equal to one of the allowed values, data/properties/queryStringParameters/properties/limit/type should be array, data/properties/queryStringParameters/properties/limit/type should match some schema in anyOf Error: schema is invalid: data/properties/queryStringParameters/properties/limit/type should be equal to one of the allowed values, data/properties/queryStringParameters/properties/limit/type should be array, data/properties/queryStringParameters/properties/limit/type should match some schema in anyOf\n    at Ajv.validateSchema (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/ajv/lib/ajv.js:178:16)\n    at Ajv._addSchema (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/ajv/lib/ajv.js:307:10)\n    at Ajv.compile (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/ajv/lib/ajv.js:113:24)\n    at Object.<anonymous>.module.exports [as default] (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/@middy/validator/index.js:50:43)\n    at Object.<anonymous> (/home/hapax/github/adamslack/lambda-unit-testing-workshop/.stryker-tmp/sandbox5925204/src/fetchCustomers/index.ts:94:98)\n    at Runtime._execModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:1299:24)\n    at Runtime._loadModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:898:12)\n    at Runtime.requireModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:746:10)\n    at Runtime.requireModuleOrMock (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:919:21)\n    at Object.<anonymous> (/home/hapax/github/adamslack/lambda-unit-testing-workshop/.stryker-tmp/sandbox5925204/src/fetchCustomers/index.test.ts:9:1)\n    at Runtime._execModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:1299:24)\n    at Runtime._loadModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:898:12)\n    at Runtime.requireModule (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runtime/build/index.js:746:10)\n    at jasmine2 (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-jasmine2/build/index.js:230:13)\n    at runTestInternal (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runner/build/runTest.js:380:22)\n    at runTest (/home/hapax/github/adamslack/lambda-unit-testing-workshop/node_modules/jest-runner/build/runTest.js:472:34)"},{"id":"21","location":{"end":{"column":8,"line":9},"start":{"column":19,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: when invoked with query params: { limit: 'a' } should not make a http request with correct params"},{"id":"22","location":{"end":{"column":60,"line":7},"start":{"column":16,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: when invoked with query params: { limit: 'a' } should not make a http request with correct params"},{"id":"24","location":{"end":{"column":52,"line":8},"start":{"column":21,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: when invoked with query params: { pageNumber: 'a' } should not make a http request with correct params"}],"source":"export default {\n  type: 'object',\n  properties: {\n    queryStringParameters: {\n      type: 'object',\n      properties: {\n        limit: { type: 'integer', maximum: 10, minimum: 1 },\n        pageNumber: { type: 'integer', minimum:  1},\n      },\n    }\n  }\n}"},"/home/hapax/github/adamslack/lambda-unit-testing-workshop/src/logger/index.ts":{"language":"typescript","mutants":[{"id":"26","location":{"end":{"column":2,"line":3},"start":{"column":66,"line":1}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: when invoked with debug level and no message should console log a DEBUG"}],"source":"export default (level: 'DEBUG' | 'ERROR', ...messages: any[]) => {\n  console.log(level, ...messages)\n}"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};